{"mappings":"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,E,E,E,Q,I,I,E,E,M,C,E,G,E,I,C,E,C,C,E,A,G,C,E,A,C,E,E,E,G,E,E,E,E,E,G,E,E,E,G,C,C,C,E,G,G,O,c,C,E,E,E,EAAA,CADP,EASA,CAAA,EAAA,SAAA,CAAA,gBAAA,M,I,E,C,E,E,E,c,I,G,I,E,C,E,E,E,c,I,Ec/EG,OAAO,UACH,EAKR,IAAI,SAAJ,CACE,OAAO,AAAwB,IAAxB,IAAI,CAAC,OAAA,CAAQ,MAAA,CAChB,WACA,CAAA,EAAG,IAAI,CAAC,OAAA,CAAQ,MAAA,CAAM,OAAA,CAAS,AACrC,CAEA,YAAY,CAAc,CAAE,CAAgB,CAA5C,CACE,KAAK,CAAC,iBAAkB,EAAQ,CAAA,EAAO,EAAQ,EAA/C,EACA,IAAI,CAAC,OAAA,CAAU,EAEf,IAAI,CAAC,SAAL,GACA,IAAI,CAAC,aAAL,EACF,CAGA,iBAAiB,CAAgB,CAAjC,CACE,EAAM,YAAA,CAAc,OAAA,CAAQ,aAAc,IAAI,CAAC,OAAA,CAAQ,EAAvD,EACA,EAAM,YAAA,CAAc,aAAA,CAAgB,MACtC,CAEA,eAAe,CAAY,CAAA,CAAS,CAEpC,WAAA,CACE,IAAI,CAAC,OAAA,CAAQ,gBAAA,CAAiB,YAAa,IAAI,CAAC,gBAAhD,EACA,IAAI,CAAC,OAAA,CAAQ,gBAAA,CAAiB,UAAW,IAAI,CAAC,cAA9C,CACF,CAEA,eAAA,CACE,IAAI,CAAC,OAAA,CAAQ,aAAA,CAAc,MAAO,WAAA,CAAc,IAAI,CAAC,OAAA,CAAQ,KAA7D,CACA,IAAI,CAAC,OAAA,CAAQ,aAAA,CAAc,MAAO,WAAA,CAAc,IAAI,CAAC,OAAA,CAAU,YAC/D,IAAI,CAAC,OAAA,CAAQ,aAAA,CAAc,KAAM,WAAA,CAAc,IAAI,CAAC,OAAA,CAAQ,WAA5D,AACF,CACD,EAjBC,A,S,C,C,C,C,C,C,C,E,I,E,E,U,M,C,E,E,E,E,A,O,E,E,O,wB,C,E,G,E,G,A,U,O,S,A,Y,O,Q,Q,C,E,Q,Q,C,E,E,E,Q,I,I,E,E,M,C,E,G,E,I,C,E,C,C,E,A,G,C,E,A,C,E,E,E,G,E,E,E,E,E,G,E,E,E,G,C,C,C,E,G,G,O,c,C,E,E,E,EAAA,CADC,EAIA,CAAA,EAAA,SAAA,CAAA,mBAAA,M,I,E,S,C,C,C,C,C,C,C,E,I,E,E,U,M,C,E,E,E,E,A,O,E,E,O,wB,C,E,G,E,G,A,U,O,S,A,Y,O,Q,Q,C,E,Q,Q,C,E,E,E,Q,I,I,E,E,M,C,E,G,E,I,C,E,C,C,E,A,G,C,E,A,C,E,E,E,G,E,E,E,E,E,G,E,E,E,G,C,E,O,E,G,G,O,c,C,E,E,G,C,CFtBG,OAAO,UACH,EAKR,YAAoB,CAA2B,CAA/C,CACE,KAAK,CAAC,eAAgB,MAAO,CAAA,EAAO,CAAA,EAAG,EAAI,SAAA,CAAW,EADpC,IAAA,CAAA,IAAA,CAAA,EAElB,IAAI,CAAC,gBAAA,CAAmB,EAAE,CAE1B,IAAI,CAAC,SAAL,GACA,IAAI,CAAC,aAAL,EACF,CAGA,gBAAgB,CAAgB,CAAhC,CACE,GAAI,EAAM,YAAA,EAAgB,AAAgC,eAAhC,EAAM,YAAA,CAAa,KAAK,CAAC,EAAE,CAAmB,CACtE,EAAM,cAAN,GACA,IAAM,EAAS,IAAI,CAAC,OAAA,CAAQ,aAAA,CAAc,MAC1C,EAAO,SAAA,CAAU,GAAA,CAAI,YACtB,CACH,CAIA,YAAY,CAAgB,CAA5B,CACE,IAAM,EAAY,EAAM,YAAA,CAAc,OAAA,CAAQ,cAE9C,AAAA,EAAa,WAAA,CACX,EACA,AAAc,WAAd,IAAI,CAAC,IAAA,CAAoB,AAAA,EAAc,MAAA,CAAS,AAAA,EAAc,QAFhE,CAIF,CAGA,iBAAiB,CAAY,CAA7B,CACE,IAAM,EAAS,IAAI,CAAC,OAAA,CAAQ,aAAA,CAAc,MAC1C,EAAO,SAAA,CAAU,MAAA,CAAO,YAC1B,CAEA,WAAA,CACE,IAAI,CAAC,OAAA,CAAQ,gBAAA,CAAiB,WAAY,IAAI,CAAC,eAA/C,EACA,IAAI,CAAC,OAAA,CAAQ,gBAAA,CAAiB,YAAa,IAAI,CAAC,gBAAhD,EACA,IAAI,CAAC,OAAA,CAAQ,gBAAA,CAAiB,OAAQ,IAAI,CAAC,WAA3C,EAEA,AAAA,EAAa,WAAA,CAAY,AAAC,IAExB,IAAM,EAAmB,EAAS,MAAA,CAAO,AAAC,GACxC,AAAI,AAAc,WAAd,IAAI,CAAC,IAAA,CAA0B,EAAI,MAAA,GAAW,AAAA,EAAc,MAAhE,CACO,EAAI,MAAA,GAAW,AAAA,EAAc,QAApC,CAGF,CAAA,IAAI,CAAC,gBAAA,CAAmB,EACxB,IAAI,CAAC,cAAL,EACF,EACF,CAEA,eAAA,CACE,IAAM,EAAS,CAAA,EAAG,IAAI,CAAC,IAAA,CAAI,cAAA,CAAgB,AAC3C,CAAA,IAAI,CAAC,OAAA,CAAQ,aAAA,CAAc,MAAO,EAAA,CAAK,EACvC,IAAI,CAAC,OAAA,CAAQ,aAAA,CAAc,MAAO,WAAA,CAChC,IAAI,CAAC,IAAA,CAAK,WAAA,GAAgB,WAC9B,CAEQ,gBAAA,CACN,IAAM,EAAS,SAAS,cAAA,CACtB,CAAA,EAAG,IAAI,CAAC,IAAA,CAAI,cAAA,CAAgB,EAG9B,IAAK,IAAM,KADX,EAAO,SAAA,CAAY,GACO,IAAI,CAAC,gBAAA,EAC7B,IAAI,EAAA,WAAA,CAAY,IAAI,CAAC,OAAA,CAAQ,aAAA,CAAc,MAAO,EAAA,CAAI,EAE1D,CACD,CA1DC,EAAA,CADC,EAOA,CAAA,EAAA,SAAA,CAAA,kBAAA,MAID,EAAA,CADC,EAQA,CAAA,EAAA,SAAA,CAAA,cAAA,MAGD,EAAA,CADC,EAIA,CAAA,EAAA,SAAA,CAAA,mBAAA,Md1CH,IAAI,EAAA,YAAA,CACJ,IAAI,EAAA,WAAA,CAAY,UAChB,IAAI,EAAA,WAAA,CAAY","sources":["<anon>","dist/app.js","src/app.ts","dist/components/project-input.js","src/components/project-input.ts","dist/components/base-components.js","src/components/base-components.ts","dist/util/validation.js","src/util/validation.ts","dist/decorators/autobind.js","src/decorators/autobind.ts","dist/state/project-state.js","src/state/project-state.ts","dist/models/project-model.js","src/models/project-model.ts","dist/components/project-list.js","src/components/project-list.ts","dist/components/project-item.js","src/components/project-item.ts"],"sourcesContent":["function $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\nvar $53c85c75653fecb8$exports = {};\n\n$parcel$export($53c85c75653fecb8$exports, \"ProjectInput\", () => $53c85c75653fecb8$export$b777e1046edba491);\nclass $8d345b247410dcff$export$16fa2f45be04daa8 {\n    constructor(templateId, hostElementId, insertAtStart, newElementId){\n        this.templateElement = document.getElementById(templateId);\n        this.hostElement = document.getElementById(hostElementId);\n        const importedNode = document.importNode(this.templateElement.content, true);\n        this.element = importedNode.firstElementChild;\n        if (newElementId) this.element.id = newElementId;\n        this.attach(insertAtStart);\n    }\n    attach(insertAtStart) {\n        this.hostElement.insertAdjacentElement(insertAtStart ? \"afterbegin\" : \"beforeend\", this.element);\n    }\n}\n\n\nfunction $b6fe99f9f7e68467$export$a22775fa5e2eebd9(validatableInput) {\n    let isValid = true;\n    if (validatableInput.required) isValid = isValid && validatableInput.value.toString().trim().length !== 0;\n    if (validatableInput.minLength != null && typeof validatableInput.value === \"string\") isValid = isValid && validatableInput.value.length >= validatableInput.minLength;\n    if (validatableInput.maxLength != null && typeof validatableInput.value === \"string\") isValid = isValid && validatableInput.value.length <= validatableInput.maxLength;\n    if (validatableInput.min != null && typeof validatableInput.value === \"number\") isValid = isValid && validatableInput.value >= validatableInput.min;\n    if (validatableInput.max != null && typeof validatableInput.value === \"number\") isValid = isValid && validatableInput.value <= validatableInput.max;\n    return isValid;\n}\n\n\nfunction $2651677a3800f647$export$f648f36420f83db(_, _2, descriptor) {\n    const originalMethod = descriptor.value;\n    const adjustedDescriptor = {\n        configurable: true,\n        get () {\n            const boundFn = originalMethod.bind(this);\n            return boundFn;\n        }\n    };\n    return adjustedDescriptor;\n}\n\n\nvar $d40c6e420ffb84b2$export$55e3bb4d393a1147;\n(function(ProjectStatus) {\n    ProjectStatus[ProjectStatus[\"Active\"] = 0] = \"Active\";\n    ProjectStatus[ProjectStatus[\"Finished\"] = 1] = \"Finished\";\n})($d40c6e420ffb84b2$export$55e3bb4d393a1147 || ($d40c6e420ffb84b2$export$55e3bb4d393a1147 = {}));\nclass $d40c6e420ffb84b2$export$b6032183171af19f {\n    constructor(id, title, description, people, status){\n        this.id = id;\n        this.title = title;\n        this.description = description;\n        this.people = people;\n        this.status = status;\n    }\n}\n\n\nclass $2e0ddbaba2b6bb93$var$State {\n    constructor(){\n        this.listeners = [];\n    }\n    addListener(listenerFn) {\n        this.listeners.push(listenerFn);\n    }\n}\nclass $2e0ddbaba2b6bb93$export$7082239a62c0df57 extends $2e0ddbaba2b6bb93$var$State {\n    constructor(){\n        super();\n        this.projects = [];\n    }\n    static getInstance() {\n        if (this.instance) return this.instance;\n        this.instance = new $2e0ddbaba2b6bb93$export$7082239a62c0df57();\n        return this.instance;\n    }\n    addProject(title, description, numPeople) {\n        const newProject = new (0, $d40c6e420ffb84b2$export$b6032183171af19f)(Math.random().toString(), title, description, numPeople, (0, $d40c6e420ffb84b2$export$55e3bb4d393a1147).Active);\n        this.projects.push(newProject);\n        this.updateListeners();\n    }\n    moveProject(projectId, newStatus) {\n        const project = this.projects.find((prj)=>prj.id === projectId);\n        if (project && project.status !== newStatus) {\n            project.status = newStatus;\n            this.updateListeners();\n        }\n    }\n    updateListeners() {\n        for (const listenerFn of this.listeners)listenerFn(this.projects.slice());\n    }\n}\nconst $2e0ddbaba2b6bb93$export$2830ccec932426c = $2e0ddbaba2b6bb93$export$7082239a62c0df57.getInstance();\n\n\nvar $53c85c75653fecb8$var$__decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nclass $53c85c75653fecb8$export$b777e1046edba491 extends (0, $8d345b247410dcff$export$16fa2f45be04daa8) {\n    constructor(){\n        super(\"project-input\", \"app\", true, \"user-input\");\n        this.titleInputElement = this.element.querySelector(\"#title\");\n        this.descriptionInputElement = this.element.querySelector(\"#description\");\n        this.peopleInputElement = this.element.querySelector(\"#people\");\n        this.configure();\n    }\n    configure() {\n        this.element.addEventListener(\"submit\", this.submitHandler);\n    }\n    renderContent() {}\n    gatherUserInput() {\n        const enteredTitle = this.titleInputElement.value;\n        const enteredDescription = this.descriptionInputElement.value;\n        const enteredPeople = this.peopleInputElement.value;\n        const titleValidatable = {\n            value: enteredTitle,\n            required: true\n        };\n        const descriptionValidatable = {\n            value: enteredDescription,\n            required: true,\n            minLength: 5\n        };\n        const peopleValidatable = {\n            value: +enteredPeople,\n            required: true,\n            min: 1,\n            max: 5\n        };\n        if (!(0, $b6fe99f9f7e68467$export$a22775fa5e2eebd9)(titleValidatable) || !(0, $b6fe99f9f7e68467$export$a22775fa5e2eebd9)(descriptionValidatable) || !(0, $b6fe99f9f7e68467$export$a22775fa5e2eebd9)(peopleValidatable)) {\n            alert(\"Invalid Input!\");\n            return;\n        }\n        return [\n            enteredTitle,\n            enteredDescription,\n            +enteredPeople\n        ];\n    }\n    clearInput() {\n        this.titleInputElement.value = \"\";\n        this.descriptionInputElement.value = \"\";\n        this.peopleInputElement.value = \"\";\n    }\n    submitHandler(event) {\n        event.preventDefault();\n        const userInput = this.gatherUserInput();\n        if (Array.isArray(userInput)) {\n            const [title, desc, people] = userInput;\n            (0, $2e0ddbaba2b6bb93$export$2830ccec932426c).addProject(title, desc, people);\n            this.clearInput();\n        }\n    }\n}\n$53c85c75653fecb8$var$__decorate([\n    (0, $2651677a3800f647$export$f648f36420f83db)\n], $53c85c75653fecb8$export$b777e1046edba491.prototype, \"submitHandler\", null);\n\n\nvar $8600880098b9768d$exports = {};\n\n$parcel$export($8600880098b9768d$exports, \"ProjectList\", () => $8600880098b9768d$export$29352359ffded387);\n\n\n\nvar $c3893e5c957d1689$exports = {};\n\n$parcel$export($c3893e5c957d1689$exports, \"ProjectItem\", () => $c3893e5c957d1689$export$7dfec255c8103ea4);\n\n\nvar $c3893e5c957d1689$var$__decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nclass $c3893e5c957d1689$export$7dfec255c8103ea4 extends (0, $8d345b247410dcff$export$16fa2f45be04daa8) {\n    get persons() {\n        return this.project.people === 1 ? \"1 person\" : `${this.project.people} people`;\n    }\n    constructor(hostId, project){\n        super(\"single-project\", hostId, false, project.id);\n        this.project = project;\n        this.configure();\n        this.renderContent();\n    }\n    dragStartHandler(event) {\n        event.dataTransfer.setData(\"text/plain\", this.project.id);\n        event.dataTransfer.effectAllowed = \"move\";\n    }\n    dragEndHandler(_) {}\n    configure() {\n        this.element.addEventListener(\"dragstart\", this.dragStartHandler);\n        this.element.addEventListener(\"dragend\", this.dragEndHandler);\n    }\n    renderContent() {\n        this.element.querySelector(\"h2\").textContent = this.project.title;\n        this.element.querySelector(\"h3\").textContent = this.persons + \" assigned\";\n        this.element.querySelector(\"p\").textContent = this.project.description;\n    }\n}\n$c3893e5c957d1689$var$__decorate([\n    (0, $2651677a3800f647$export$f648f36420f83db)\n], $c3893e5c957d1689$export$7dfec255c8103ea4.prototype, \"dragStartHandler\", null);\n\n\n\nvar $8600880098b9768d$var$__decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nclass $8600880098b9768d$export$29352359ffded387 extends (0, $8d345b247410dcff$export$16fa2f45be04daa8) {\n    constructor(type){\n        super(\"project-list\", \"app\", false, `${type}-projects`);\n        this.type = type;\n        this.assignedProjects = [];\n        this.configure();\n        this.renderContent();\n    }\n    dragOverHandler(event) {\n        if (event.dataTransfer && event.dataTransfer.types[0] === \"text/plain\") {\n            event.preventDefault();\n            const listEl = this.element.querySelector(\"ul\");\n            listEl.classList.add(\"droppable\");\n        }\n    }\n    dropHandler(event) {\n        const projectId = event.dataTransfer.getData(\"text/plain\");\n        (0, $2e0ddbaba2b6bb93$export$2830ccec932426c).moveProject(projectId, this.type === \"active\" ? (0, $d40c6e420ffb84b2$export$55e3bb4d393a1147).Active : (0, $d40c6e420ffb84b2$export$55e3bb4d393a1147).Finished);\n    }\n    dragLeaveHandler(_) {\n        const listEl = this.element.querySelector(\"ul\");\n        listEl.classList.remove(\"droppable\");\n    }\n    configure() {\n        this.element.addEventListener(\"dragover\", this.dragOverHandler);\n        this.element.addEventListener(\"dragleave\", this.dragLeaveHandler);\n        this.element.addEventListener(\"drop\", this.dropHandler);\n        (0, $2e0ddbaba2b6bb93$export$2830ccec932426c).addListener((projects)=>{\n            const relevantProjects = projects.filter((prj)=>{\n                if (this.type === \"active\") return prj.status === (0, $d40c6e420ffb84b2$export$55e3bb4d393a1147).Active;\n                return prj.status === (0, $d40c6e420ffb84b2$export$55e3bb4d393a1147).Finished;\n            });\n            this.assignedProjects = relevantProjects;\n            this.renderProjects();\n        });\n    }\n    renderContent() {\n        const listId = `${this.type}-projects-list`;\n        this.element.querySelector(\"ul\").id = listId;\n        this.element.querySelector(\"h2\").textContent = this.type.toUpperCase() + \" PROJECTS\";\n    }\n    renderProjects() {\n        const listEl = document.getElementById(`${this.type}-projects-list`);\n        listEl.innerHTML = \"\";\n        for (const projectItem of this.assignedProjects)new (0, $c3893e5c957d1689$exports.ProjectItem)(this.element.querySelector(\"ul\").id, projectItem);\n    }\n}\n$8600880098b9768d$var$__decorate([\n    (0, $2651677a3800f647$export$f648f36420f83db)\n], $8600880098b9768d$export$29352359ffded387.prototype, \"dragOverHandler\", null);\n$8600880098b9768d$var$__decorate([\n    (0, $2651677a3800f647$export$f648f36420f83db)\n], $8600880098b9768d$export$29352359ffded387.prototype, \"dropHandler\", null);\n$8600880098b9768d$var$__decorate([\n    (0, $2651677a3800f647$export$f648f36420f83db)\n], $8600880098b9768d$export$29352359ffded387.prototype, \"dragLeaveHandler\", null);\n\n\nnew (0, $53c85c75653fecb8$exports.ProjectInput)();\nnew (0, $8600880098b9768d$exports.ProjectList)(\"active\");\nnew (0, $8600880098b9768d$exports.ProjectList)(\"finished\");\n\n\n//# sourceMappingURL=index.2c21d8c9.js.map\n","import { ProjectInput } from \"./components/project-input.js\";\nimport { ProjectList } from \"./components/project-list.js\";\nnew ProjectInput();\nnew ProjectList(\"active\");\nnew ProjectList(\"finished\");\n//# sourceMappingURL=app.js.map","import { ProjectInput } from \"./components/project-input.js\";\r\nimport { ProjectList } from \"./components/project-list.js\";\r\n\r\nnew ProjectInput();\r\nnew ProjectList(\"active\");\r\nnew ProjectList(\"finished\");\r\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component } from \"./base-components.js\";\nimport { validate } from \"../util/validation.js\";\nimport { autobind } from \"../decorators/autobind.js\";\nimport { projectState } from \"../state/project-state.js\";\nexport class ProjectInput extends Component {\n    constructor() {\n        super(\"project-input\", \"app\", true, \"user-input\");\n        this.titleInputElement = this.element.querySelector(\"#title\");\n        this.descriptionInputElement = this.element.querySelector(\"#description\");\n        this.peopleInputElement = this.element.querySelector(\"#people\");\n        this.configure();\n    }\n    configure() {\n        this.element.addEventListener(\"submit\", this.submitHandler);\n    }\n    renderContent() { }\n    gatherUserInput() {\n        const enteredTitle = this.titleInputElement.value;\n        const enteredDescription = this.descriptionInputElement.value;\n        const enteredPeople = this.peopleInputElement.value;\n        const titleValidatable = {\n            value: enteredTitle,\n            required: true,\n        };\n        const descriptionValidatable = {\n            value: enteredDescription,\n            required: true,\n            minLength: 5,\n        };\n        const peopleValidatable = {\n            value: +enteredPeople,\n            required: true,\n            min: 1,\n            max: 5,\n        };\n        if (!validate(titleValidatable) ||\n            !validate(descriptionValidatable) ||\n            !validate(peopleValidatable)) {\n            alert(\"Invalid Input!\");\n            return;\n        }\n        return [enteredTitle, enteredDescription, +enteredPeople];\n    }\n    clearInput() {\n        this.titleInputElement.value = \"\";\n        this.descriptionInputElement.value = \"\";\n        this.peopleInputElement.value = \"\";\n    }\n    submitHandler(event) {\n        event.preventDefault();\n        const userInput = this.gatherUserInput();\n        if (Array.isArray(userInput)) {\n            const [title, desc, people] = userInput;\n            projectState.addProject(title, desc, people);\n            this.clearInput();\n        }\n    }\n}\n__decorate([\n    autobind\n], ProjectInput.prototype, \"submitHandler\", null);\n//# sourceMappingURL=project-input.js.map","import { Component } from \"./base-components.js\";\r\nimport { Validatable, validate } from \"../util/validation.js\";\r\nimport { autobind } from \"../decorators/autobind.js\";\r\nimport { projectState } from \"../state/project-state.js\";\r\n\r\nexport class ProjectInput extends Component<HTMLDivElement, HTMLFormElement> {\r\n  titleInputElement: HTMLInputElement;\r\n  descriptionInputElement: HTMLInputElement;\r\n  peopleInputElement: HTMLInputElement;\r\n\r\n  constructor() {\r\n    super(\"project-input\", \"app\", true, \"user-input\");\r\n\r\n    this.titleInputElement = this.element.querySelector(\r\n      \"#title\"\r\n    ) as HTMLInputElement;\r\n\r\n    this.descriptionInputElement = this.element.querySelector(\r\n      \"#description\"\r\n    ) as HTMLInputElement;\r\n\r\n    this.peopleInputElement = this.element.querySelector(\r\n      \"#people\"\r\n    ) as HTMLInputElement;\r\n\r\n    this.configure();\r\n  }\r\n\r\n  configure() {\r\n    this.element.addEventListener(\"submit\", this.submitHandler);\r\n  }\r\n\r\n  renderContent(): void {}\r\n\r\n  // Tuple return type\r\n  private gatherUserInput(): [string, string, number] | void {\r\n    const enteredTitle = this.titleInputElement.value;\r\n    const enteredDescription = this.descriptionInputElement.value;\r\n    const enteredPeople = this.peopleInputElement.value;\r\n\r\n    const titleValidatable: Validatable = {\r\n      value: enteredTitle,\r\n      required: true,\r\n    };\r\n\r\n    const descriptionValidatable: Validatable = {\r\n      value: enteredDescription,\r\n      required: true,\r\n      minLength: 5,\r\n    };\r\n\r\n    const peopleValidatable: Validatable = {\r\n      value: +enteredPeople,\r\n      required: true,\r\n      min: 1,\r\n      max: 5,\r\n    };\r\n\r\n    if (\r\n      !validate(titleValidatable) ||\r\n      !validate(descriptionValidatable) ||\r\n      !validate(peopleValidatable)\r\n    ) {\r\n      alert(\"Invalid Input!\");\r\n      return;\r\n    }\r\n    return [enteredTitle, enteredDescription, +enteredPeople];\r\n  }\r\n\r\n  private clearInput() {\r\n    this.titleInputElement.value = \"\";\r\n    this.descriptionInputElement.value = \"\";\r\n    this.peopleInputElement.value = \"\";\r\n  }\r\n\r\n  @autobind\r\n  private submitHandler(event: Event) {\r\n    event.preventDefault();\r\n    const userInput = this.gatherUserInput();\r\n    if (Array.isArray(userInput)) {\r\n      const [title, desc, people] = userInput;\r\n      projectState.addProject(title, desc, people);\r\n      this.clearInput();\r\n    }\r\n  }\r\n}\r\n","export class Component {\n    constructor(templateId, hostElementId, insertAtStart, newElementId) {\n        this.templateElement = document.getElementById(templateId);\n        this.hostElement = document.getElementById(hostElementId);\n        const importedNode = document.importNode(this.templateElement.content, true);\n        this.element = importedNode.firstElementChild;\n        if (newElementId)\n            this.element.id = newElementId;\n        this.attach(insertAtStart);\n    }\n    attach(insertAtStart) {\n        this.hostElement.insertAdjacentElement(insertAtStart ? \"afterbegin\" : \"beforeend\", this.element);\n    }\n}\n//# sourceMappingURL=base-components.js.map","// Component class, base class to inherit\r\n// Make abstract; only to be used for inheritance, never for instantiating\r\nexport abstract class Component<T extends HTMLElement, U extends HTMLElement> {\r\n  templateElement: HTMLTemplateElement;\r\n  hostElement: T;\r\n  element: U;\r\n\r\n  constructor(\r\n    templateId: string,\r\n    hostElementId: string,\r\n    insertAtStart: boolean,\r\n    newElementId?: string\r\n  ) {\r\n    this.templateElement = document.getElementById(\r\n      templateId\r\n    )! as HTMLTemplateElement;\r\n    this.hostElement = document.getElementById(hostElementId)! as T;\r\n\r\n    const importedNode = document.importNode(\r\n      this.templateElement.content,\r\n      true\r\n    );\r\n\r\n    this.element = importedNode.firstElementChild as U;\r\n    if (newElementId) this.element.id = newElementId;\r\n\r\n    this.attach(insertAtStart);\r\n  }\r\n\r\n  private attach(insertAtStart: boolean) {\r\n    this.hostElement.insertAdjacentElement(\r\n      insertAtStart ? \"afterbegin\" : \"beforeend\",\r\n      this.element\r\n    );\r\n  }\r\n\r\n  abstract configure(): void;\r\n  abstract renderContent(): void;\r\n}\r\n","export function validate(validatableInput) {\n    let isValid = true;\n    if (validatableInput.required) {\n        isValid = isValid && validatableInput.value.toString().trim().length !== 0;\n    }\n    if (validatableInput.minLength != null &&\n        typeof validatableInput.value === \"string\") {\n        isValid =\n            isValid && validatableInput.value.length >= validatableInput.minLength;\n    }\n    if (validatableInput.maxLength != null &&\n        typeof validatableInput.value === \"string\") {\n        isValid =\n            isValid && validatableInput.value.length <= validatableInput.maxLength;\n    }\n    if (validatableInput.min != null &&\n        typeof validatableInput.value === \"number\") {\n        isValid = isValid && validatableInput.value >= validatableInput.min;\n    }\n    if (validatableInput.max != null &&\n        typeof validatableInput.value === \"number\") {\n        isValid = isValid && validatableInput.value <= validatableInput.max;\n    }\n    return isValid;\n}\n//# sourceMappingURL=validation.js.map","// Validation\r\nexport interface Validatable {\r\n  // ? means optional\r\n  value: string | number;\r\n  required?: boolean;\r\n  minLength?: number;\r\n  maxLength?: number;\r\n  min?: number;\r\n  max?: number;\r\n}\r\n\r\nexport function validate(validatableInput: Validatable) {\r\n  let isValid = true;\r\n\r\n  // Make sure value has something in it\r\n  if (validatableInput.required) {\r\n    isValid = isValid && validatableInput.value.toString().trim().length !== 0;\r\n  }\r\n\r\n  // Make sure input is larger than minimum length required\r\n  if (\r\n    validatableInput.minLength != null &&\r\n    typeof validatableInput.value === \"string\"\r\n  ) {\r\n    isValid =\r\n      isValid && validatableInput.value.length >= validatableInput.minLength;\r\n  }\r\n\r\n  // Make sure input is smaller than max length\r\n  if (\r\n    validatableInput.maxLength != null &&\r\n    typeof validatableInput.value === \"string\"\r\n  ) {\r\n    isValid =\r\n      isValid && validatableInput.value.length <= validatableInput.maxLength;\r\n  }\r\n\r\n  // Number less than the max\r\n  if (\r\n    validatableInput.min != null &&\r\n    typeof validatableInput.value === \"number\"\r\n  ) {\r\n    isValid = isValid && validatableInput.value >= validatableInput.min;\r\n  }\r\n\r\n  // number greater than the min\r\n  if (\r\n    validatableInput.max != null &&\r\n    typeof validatableInput.value === \"number\"\r\n  ) {\r\n    isValid = isValid && validatableInput.value <= validatableInput.max;\r\n  }\r\n\r\n  return isValid;\r\n}\r\n","export function autobind(_, _2, descriptor) {\n    const originalMethod = descriptor.value;\n    const adjustedDescriptor = {\n        configurable: true,\n        get() {\n            const boundFn = originalMethod.bind(this);\n            return boundFn;\n        },\n    };\n    return adjustedDescriptor;\n}\n//# sourceMappingURL=autobind.js.map","// Auto binding decorator\r\nexport function autobind(\r\n  _: any, // target\r\n  _2: string, // methodName\r\n  descriptor: PropertyDescriptor\r\n) {\r\n  const originalMethod = descriptor.value;\r\n  const adjustedDescriptor: PropertyDescriptor = {\r\n    configurable: true,\r\n    get() {\r\n      const boundFn = originalMethod.bind(this);\r\n      return boundFn;\r\n    },\r\n  };\r\n\r\n  return adjustedDescriptor;\r\n}\r\n","import { Project, ProjectStatus } from \"../models/project-model.js\";\nclass State {\n    constructor() {\n        this.listeners = [];\n    }\n    addListener(listenerFn) {\n        this.listeners.push(listenerFn);\n    }\n}\nexport class ProjectState extends State {\n    constructor() {\n        super();\n        this.projects = [];\n    }\n    static getInstance() {\n        if (this.instance)\n            return this.instance;\n        this.instance = new ProjectState();\n        return this.instance;\n    }\n    addProject(title, description, numPeople) {\n        const newProject = new Project(Math.random().toString(), title, description, numPeople, ProjectStatus.Active);\n        this.projects.push(newProject);\n        this.updateListeners();\n    }\n    moveProject(projectId, newStatus) {\n        const project = this.projects.find((prj) => prj.id === projectId);\n        if (project && project.status !== newStatus) {\n            project.status = newStatus;\n            this.updateListeners();\n        }\n    }\n    updateListeners() {\n        for (const listenerFn of this.listeners) {\n            listenerFn(this.projects.slice());\n        }\n    }\n}\nexport const projectState = ProjectState.getInstance();\n//# sourceMappingURL=project-state.js.map","import { Project, ProjectStatus } from \"../models/project-model.js\";\r\n\r\n// Project state management\r\n\r\ntype Listener<T> = (items: T[]) => void;\r\n\r\nclass State<T> {\r\n  protected listeners: Listener<T>[] = []; // Listeners to subscribe to\r\n  addListener(listenerFn: Listener<T>) {\r\n    this.listeners.push(listenerFn);\r\n  }\r\n}\r\n\r\nexport class ProjectState extends State<Project> {\r\n  private projects: Project[] = [];\r\n  private static instance: ProjectState; // This means there can only be 1 object instantiated\r\n\r\n  private constructor() {\r\n    super();\r\n  }\r\n\r\n  static getInstance() {\r\n    if (this.instance) return this.instance;\r\n\r\n    this.instance = new ProjectState();\r\n    return this.instance;\r\n  }\r\n\r\n  addProject(title: string, description: string, numPeople: number) {\r\n    const newProject = new Project(\r\n      Math.random().toString(),\r\n      title,\r\n      description,\r\n      numPeople,\r\n      ProjectStatus.Active\r\n    );\r\n\r\n    this.projects.push(newProject);\r\n    this.updateListeners();\r\n  }\r\n\r\n  moveProject(projectId: string, newStatus: ProjectStatus) {\r\n    const project = this.projects.find((prj) => prj.id === projectId);\r\n\r\n    if (project && project.status !== newStatus) {\r\n      project.status = newStatus;\r\n      this.updateListeners();\r\n    }\r\n  }\r\n\r\n  private updateListeners() {\r\n    // Subscribe to the listeners\r\n    for (const listenerFn of this.listeners) {\r\n      listenerFn(this.projects.slice()); // Return a copy of the array (not a reference, don't want it to be modified)\r\n    }\r\n  }\r\n}\r\n\r\n// Instantiate previous class; manage project global state\r\nexport const projectState = ProjectState.getInstance();\r\n","export var ProjectStatus;\n(function (ProjectStatus) {\n    ProjectStatus[ProjectStatus[\"Active\"] = 0] = \"Active\";\n    ProjectStatus[ProjectStatus[\"Finished\"] = 1] = \"Finished\";\n})(ProjectStatus || (ProjectStatus = {}));\nexport class Project {\n    constructor(id, title, description, people, status) {\n        this.id = id;\n        this.title = title;\n        this.description = description;\n        this.people = people;\n        this.status = status;\n    }\n}\n//# sourceMappingURL=project-model.js.map","// Project type\r\nexport enum ProjectStatus {\r\n  Active,\r\n  Finished,\r\n}\r\n\r\nexport class Project {\r\n  constructor(\r\n    public id: string,\r\n    public title: string,\r\n    public description: string,\r\n    public people: number,\r\n    public status: ProjectStatus\r\n  ) {}\r\n}\r\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component } from \"./base-components.js\";\nimport { autobind } from \"../decorators/autobind.js\";\nimport { ProjectStatus } from \"../models/project-model.js\";\nimport { ProjectItem } from \"./project-item.js\";\nimport { projectState } from \"../state/project-state.js\";\nexport class ProjectList extends Component {\n    constructor(type) {\n        super(\"project-list\", \"app\", false, `${type}-projects`);\n        this.type = type;\n        this.assignedProjects = [];\n        this.configure();\n        this.renderContent();\n    }\n    dragOverHandler(event) {\n        if (event.dataTransfer && event.dataTransfer.types[0] === \"text/plain\") {\n            event.preventDefault();\n            const listEl = this.element.querySelector(\"ul\");\n            listEl.classList.add(\"droppable\");\n        }\n    }\n    dropHandler(event) {\n        const projectId = event.dataTransfer.getData(\"text/plain\");\n        projectState.moveProject(projectId, this.type === \"active\" ? ProjectStatus.Active : ProjectStatus.Finished);\n    }\n    dragLeaveHandler(_) {\n        const listEl = this.element.querySelector(\"ul\");\n        listEl.classList.remove(\"droppable\");\n    }\n    configure() {\n        this.element.addEventListener(\"dragover\", this.dragOverHandler);\n        this.element.addEventListener(\"dragleave\", this.dragLeaveHandler);\n        this.element.addEventListener(\"drop\", this.dropHandler);\n        projectState.addListener((projects) => {\n            const relevantProjects = projects.filter((prj) => {\n                if (this.type === \"active\")\n                    return prj.status === ProjectStatus.Active;\n                return prj.status === ProjectStatus.Finished;\n            });\n            this.assignedProjects = relevantProjects;\n            this.renderProjects();\n        });\n    }\n    renderContent() {\n        const listId = `${this.type}-projects-list`;\n        this.element.querySelector(\"ul\").id = listId;\n        this.element.querySelector(\"h2\").textContent =\n            this.type.toUpperCase() + \" PROJECTS\";\n    }\n    renderProjects() {\n        const listEl = document.getElementById(`${this.type}-projects-list`);\n        listEl.innerHTML = \"\";\n        for (const projectItem of this.assignedProjects) {\n            new ProjectItem(this.element.querySelector(\"ul\").id, projectItem);\n        }\n    }\n}\n__decorate([\n    autobind\n], ProjectList.prototype, \"dragOverHandler\", null);\n__decorate([\n    autobind\n], ProjectList.prototype, \"dropHandler\", null);\n__decorate([\n    autobind\n], ProjectList.prototype, \"dragLeaveHandler\", null);\n//# sourceMappingURL=project-list.js.map","import { DragTarget } from \"../models/drag-drop.js\";\r\nimport { Component } from \"./base-components.js\";\r\nimport { autobind } from \"../decorators/autobind.js\";\r\nimport { Project, ProjectStatus } from \"../models/project-model.js\";\r\nimport { ProjectItem } from \"./project-item.js\";\r\nimport { projectState } from \"../state/project-state.js\";\r\n\r\nexport class ProjectList\r\n  extends Component<HTMLDivElement, HTMLElement>\r\n  implements DragTarget\r\n{\r\n  assignedProjects: Project[];\r\n\r\n  constructor(private type: \"active\" | \"finished\") {\r\n    super(\"project-list\", \"app\", false, `${type}-projects`);\r\n    this.assignedProjects = [];\r\n\r\n    this.configure();\r\n    this.renderContent();\r\n  }\r\n\r\n  @autobind\r\n  dragOverHandler(event: DragEvent): void {\r\n    if (event.dataTransfer && event.dataTransfer.types[0] === \"text/plain\") {\r\n      event.preventDefault(); // Want to allow a drop\r\n      const listEl = this.element.querySelector(\"ul\")!;\r\n      listEl.classList.add(\"droppable\");\r\n    }\r\n  }\r\n\r\n  // Autobind \"this\" to the 'ProjectList' class\r\n  @autobind\r\n  dropHandler(event: DragEvent): void {\r\n    const projectId = event.dataTransfer!.getData(\"text/plain\");\r\n\r\n    projectState.moveProject(\r\n      projectId,\r\n      this.type === \"active\" ? ProjectStatus.Active : ProjectStatus.Finished\r\n    );\r\n  }\r\n\r\n  @autobind\r\n  dragLeaveHandler(_: DragEvent): void {\r\n    const listEl = this.element.querySelector(\"ul\")!;\r\n    listEl.classList.remove(\"droppable\");\r\n  }\r\n\r\n  configure(): void {\r\n    this.element.addEventListener(\"dragover\", this.dragOverHandler);\r\n    this.element.addEventListener(\"dragleave\", this.dragLeaveHandler);\r\n    this.element.addEventListener(\"drop\", this.dropHandler);\r\n\r\n    projectState.addListener((projects: Project[]) => {\r\n      // Filter based on active or finished project states\r\n      const relevantProjects = projects.filter((prj) => {\r\n        if (this.type === \"active\") return prj.status === ProjectStatus.Active;\r\n        return prj.status === ProjectStatus.Finished;\r\n      });\r\n\r\n      this.assignedProjects = relevantProjects;\r\n      this.renderProjects();\r\n    });\r\n  }\r\n\r\n  renderContent() {\r\n    const listId = `${this.type}-projects-list`;\r\n    this.element.querySelector(\"ul\")!.id = listId;\r\n    this.element.querySelector(\"h2\")!.textContent =\r\n      this.type.toUpperCase() + \" PROJECTS\";\r\n  }\r\n\r\n  private renderProjects() {\r\n    const listEl = document.getElementById(\r\n      `${this.type}-projects-list`\r\n    )! as HTMLUListElement;\r\n    listEl.innerHTML = \"\";\r\n    for (const projectItem of this.assignedProjects) {\r\n      new ProjectItem(this.element.querySelector(\"ul\")!.id, projectItem);\r\n    }\r\n  }\r\n}\r\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component } from \"./base-components.js\";\nimport { autobind } from \"../decorators/autobind.js\";\nexport class ProjectItem extends Component {\n    get persons() {\n        return this.project.people === 1\n            ? \"1 person\"\n            : `${this.project.people} people`;\n    }\n    constructor(hostId, project) {\n        super(\"single-project\", hostId, false, project.id);\n        this.project = project;\n        this.configure();\n        this.renderContent();\n    }\n    dragStartHandler(event) {\n        event.dataTransfer.setData(\"text/plain\", this.project.id);\n        event.dataTransfer.effectAllowed = \"move\";\n    }\n    dragEndHandler(_) { }\n    configure() {\n        this.element.addEventListener(\"dragstart\", this.dragStartHandler);\n        this.element.addEventListener(\"dragend\", this.dragEndHandler);\n    }\n    renderContent() {\n        this.element.querySelector(\"h2\").textContent = this.project.title;\n        this.element.querySelector(\"h3\").textContent = this.persons + \" assigned\";\n        this.element.querySelector(\"p\").textContent = this.project.description;\n    }\n}\n__decorate([\n    autobind\n], ProjectItem.prototype, \"dragStartHandler\", null);\n//# sourceMappingURL=project-item.js.map","import { Draggable } from \"../models/drag-drop.js\";\r\nimport { Project } from \"../models/project-model.js\";\r\nimport { Component } from \"./base-components.js\";\r\nimport { autobind } from \"../decorators/autobind.js\";\r\n\r\nexport class ProjectItem\r\n  extends Component<HTMLUListElement, HTMLLIElement>\r\n  implements Draggable\r\n{\r\n  private project: Project;\r\n\r\n  get persons() {\r\n    return this.project.people === 1\r\n      ? \"1 person\"\r\n      : `${this.project.people} people`;\r\n  }\r\n\r\n  constructor(hostId: string, project: Project) {\r\n    super(\"single-project\", hostId, false, project.id);\r\n    this.project = project;\r\n\r\n    this.configure();\r\n    this.renderContent();\r\n  }\r\n\r\n  @autobind\r\n  dragStartHandler(event: DragEvent): void {\r\n    event.dataTransfer!.setData(\"text/plain\", this.project.id);\r\n    event.dataTransfer!.effectAllowed = \"move\";\r\n  }\r\n\r\n  dragEndHandler(_: DragEvent): void {}\r\n\r\n  configure() {\r\n    this.element.addEventListener(\"dragstart\", this.dragStartHandler);\r\n    this.element.addEventListener(\"dragend\", this.dragEndHandler);\r\n  }\r\n\r\n  renderContent(): void {\r\n    this.element.querySelector(\"h2\")!.textContent = this.project.title;\r\n    this.element.querySelector(\"h3\")!.textContent = this.persons + \" assigned\";\r\n    this.element.querySelector(\"p\")!.textContent = this.project.description;\r\n  }\r\n}\r\n"],"names":["$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","ProjectStatus","$d40c6e420ffb84b2$export$55e3bb4d393a1147","$53c85c75653fecb8$exports","$53c85c75653fecb8$export$b777e1046edba491","$8d345b247410dcff$export$16fa2f45be04daa8","constructor","templateId","hostElementId","insertAtStart","newElementId","templateElement","document","getElementById","hostElement","importedNode","importNode","content","element","firstElementChild","id","attach","insertAdjacentElement","$b6fe99f9f7e68467$export$a22775fa5e2eebd9","validatableInput","isValid","required","value","toString","trim","length","minLength","maxLength","min","max","$2651677a3800f647$export$f648f36420f83db","_","_2","descriptor","originalMethod","boundFn","bind","$d40c6e420ffb84b2$export$b6032183171af19f","title","description","people","status","$2e0ddbaba2b6bb93$var$State","listeners","addListener","listenerFn","push","$2e0ddbaba2b6bb93$export$7082239a62c0df57","projects","getInstance","instance","addProject","numPeople","newProject","Math","random","Active","updateListeners","moveProject","projectId","newStatus","project","find","prj","slice","$2e0ddbaba2b6bb93$export$2830ccec932426c","titleInputElement","querySelector","descriptionInputElement","peopleInputElement","configure","addEventListener","submitHandler","renderContent","gatherUserInput","enteredTitle","enteredDescription","enteredPeople","alert","clearInput","event","preventDefault","userInput","Array","isArray","desc","$53c85c75653fecb8$var$__decorate","decorators","target","key","d","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","i","prototype","$8600880098b9768d$exports","$8600880098b9768d$export$29352359ffded387","$c3893e5c957d1689$exports","$c3893e5c957d1689$export$7dfec255c8103ea4","persons","hostId","dragStartHandler","dataTransfer","setData","effectAllowed","dragEndHandler","textContent","$c3893e5c957d1689$var$__decorate","$8600880098b9768d$var$__decorate","type","assignedProjects","dragOverHandler","types","listEl","classList","add","dropHandler","getData","Finished","dragLeaveHandler","remove","relevantProjects","filter","renderProjects","listId","toUpperCase","projectItem","innerHTML","ProjectItem","ProjectInput","ProjectList"],"version":3,"file":"index.2c21d8c9.js.map"}